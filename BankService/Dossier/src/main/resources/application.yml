spring:
  config:
    import: email-config.yml
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: earliest
      group-id: deal-notifications
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: com.munsun.deal.queries.payload.EmailMessage:com.munsun.dossier.queries.payload.EmailMessage,
                                  com.munsun.deal.queries.payload.EmailMessageWithSesCode:com.munsun.dossier.queries.payload.EmailMessageWithSesCode,
                                  com.munsun.deal.queries.payload.EmailMessageWithCreditDto:com.munsun.dossier.queries.payload.EmailMessageWithCreditDto,
                                  com.munsun.deal.dto.response.CreditDto:com.munsun.dossier.queries.payload.CreditDto,
                                  com.munsun.deal.dto.response.PaymentScheduleElementDto:com.munsun.dossier.queries.payload.PaymentScheduleElementDto

kafka:
  init:
    topics: true
  topics:
    finish_registration: finish-registration
    create_documents: create-documents
    send_documents: send-documents
    send_ses: send-ses
    credit_issued: credit-issued
    statement_denied: statement-denied

client:
  deal:
    url: http://localhost:8080