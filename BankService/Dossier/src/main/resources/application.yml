spring:
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
#    protocol: ${MAIL_PROTOCOL}
    properties:
      "mail.smtp.auth": true
      "mail.smtp.starttls.enable": true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: earliest
      group-id: deal-notifications
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: com.munsun.deal.kafka.payload.EmailMessage:com.munsun.dossier.kafka.payload.EmailMessage,
                                  com.munsun.deal.kafka.payload.EmailMessageWithSesCode:com.munsun.dossier.kafka.payload.EmailMessageWithSesCode,
                                  com.munsun.deal.kafka.payload.EmailMessageWithCreditDto:com.munsun.dossier.kafka.payload.EmailMessageWithCreditDto,
                                  com.munsun.deal.dto.CreditDto:com.munsun.dossier.kafka.payload.CreditDto,
                                  com.munsun.deal.dto.PaymentScheduleElementDto:com.munsun.dossier.kafka.payload.PaymentScheduleElementDto
kafka:
  init:
    topics: true
  topics:
    finish_registration: finish-registration
    create_documents: create-documents
    send_documents: send-documents
    send_ses: send-ses
    credit_issued: credit-issued
    statement_denied: statement-denied

clients:
  deal:
    name: deal

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8000/eureka/